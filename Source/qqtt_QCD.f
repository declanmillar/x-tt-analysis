      real*8 function sqqb_ttb(p1, p2, p3, p4, lam3, lam4)
c  
c function generated by madgraph
c returns amplitude squared summed/avg over colors
c and helicities
c for the point in phase space p1,p2,p3,p4,...
c  
c for process : u u~  -> t t~  
c  
      implicit none
c  
c constants
c  
      integer    nexternal,   ncomb                     
      parameter (nexternal=4, ncomb= 16)
c  
c arguments 
c  
      integer lam3,lam4
      real*8 p1(0:3),p2(0:3),p3(0:3),p4(0:3)  
c  
c local variables 
c  
      integer nhel(nexternal,ncomb),ntry    
      real*8 t
      real*8 qqb_ttb   
      integer ihel
      logical goodhel(ncomb)
      data goodhel/ncomb*.false./
      data ntry/0/
      data (nhel(ihel,  1),ihel=1,4) / -1, -1, -1, -1/
      data (nhel(ihel,  2),ihel=1,4) / -1, -1, -1,  1/
      data (nhel(ihel,  3),ihel=1,4) / -1, -1,  1, -1/
      data (nhel(ihel,  4),ihel=1,4) / -1, -1,  1,  1/
      data (nhel(ihel,  5),ihel=1,4) / -1,  1, -1, -1/
      data (nhel(ihel,  6),ihel=1,4) / -1,  1, -1,  1/
      data (nhel(ihel,  7),ihel=1,4) / -1,  1,  1, -1/
      data (nhel(ihel,  8),ihel=1,4) / -1,  1,  1,  1/
      data (nhel(ihel,  9),ihel=1,4) /  1, -1, -1, -1/
      data (nhel(ihel, 10),ihel=1,4) /  1, -1, -1,  1/
      data (nhel(ihel, 11),ihel=1,4) /  1, -1,  1, -1/
      data (nhel(ihel, 12),ihel=1,4) /  1, -1,  1,  1/
      data (nhel(ihel, 13),ihel=1,4) /  1,  1, -1, -1/
      data (nhel(ihel, 14),ihel=1,4) /  1,  1, -1,  1/
      data (nhel(ihel, 15),ihel=1,4) /  1,  1,  1, -1/
      data (nhel(ihel, 16),ihel=1,4) /  1,  1,  1,  1/
c ----------
c begin code
c ----------
      sqqb_ttb = 0d0
      ntry=ntry+1
      do ihel=1,ncomb
c          if (goodhel(ihel) .or. ntry .lt. 10) then
             t=qqb_ttb(p1, p2, p3, p4,lam3,lam4,nhel(1,ihel)) 
             sqqb_ttb = sqqb_ttb + t
c              if (t .gt. 0d0 .and. .not. goodhel(ihel)) then
c                  goodhel(ihel)=.true.
c                  write(*,*) ihel,t
c              endif
c          endif
      enddo
      sqqb_ttb = sqqb_ttb /  4d0 
      end
       
       
      real*8 function qqb_ttb(p1, p2, p3, p4,lam3,lam4,nhel)
c  
c function generated by madgraph
c returns amplitude squared summed/avg over colors
c for the point in phase space p1,p2,p3,p4,...
c and helicity nhel(1),nhel(2),....
c  
c for process : u u~  -> t t~  
c  
      implicit none
c  
c constants
c  
      integer    ngraphs,    neigen,    nexternal       
      parameter (ngraphs=  1,neigen=  1,nexternal=4)    
      real*8     zero
      parameter (zero=0d0)
c  
c arguments 
c  
      real*8 p1(0:3),p2(0:3),p3(0:3),p4(0:3)
      integer lam3,lam4   
      integer nhel(nexternal)     
c  
c local variables 
c  
      integer i,j
      real*8 eigen_val(neigen), eigen_vec(ngraphs,neigen)
      complex*16 ztemp
      complex*16 amp(ngraphs)
      complex*16 w1(6)  , w2(6)  , w3(6)  , w4(6)  , w5(6)  
c  
c global variables
c  
      real*8           gg(2), g
      common /coupqcd/ gg,    g
      real*8            fmass(12), fwidth(12)
      common /fermions/ fmass,     fwidth
c  
c color data
c  
      data eigen_val(1  )/       2.2222222222222221e-01 /                  
      data eigen_vec(1  ,1  )/  -1.0000000000000000e+00 /                  
c ----------
c begin code
c ----------
      if((nhel(3).eq.lam3).and.(nhel(4).eq.lam4))then
        continue
      else
        qqb_ttb = 0.d0 
        return
      end if

      call ixxxxx(p1  ,fmass(3  ),nhel(1  ), 1,w1  )                       
      call oxxxxx(p2  ,fmass(3  ),nhel(2  ),-1,w2  )                       
      call oxxxxx(p3  ,fmass(11 ),nhel(3  ), 1,w3  )                       
      call ixxxxx(p4  ,fmass(11 ),nhel(4  ),-1,w4  )                       
      call jioxxx(w1  ,w2  ,gg,zero,zero,w5  )                             
      call iovxxx(w4  ,w3  ,w5  ,gg,amp(1  ))                              
      qqb_ttb = 0.d0 
      do i = 1, neigen
          ztemp = (0.d0,0.d0)
          do j = 1, ngraphs
              ztemp = ztemp + eigen_vec(j,i)*amp(j)
          enddo
          qqb_ttb =qqb_ttb+ztemp*eigen_val(i)*conjg(ztemp) 
      enddo
c      call gaugecheck(amp,ztemp,eigen_vec,eigen_val,ngraphs,neigen)
      end
